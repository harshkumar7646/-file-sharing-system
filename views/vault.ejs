<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Vault Header -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8 fade-in">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between">
            <div class="flex-1">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-folder-open text-blue-500 mr-3"></i>
                    <%= vault.name %>
                </h1>
                <% if (vault.description) { %>
                    <p class="text-gray-600 mb-4"><%= vault.description %></p>
                <% } %>
                
                <div class="flex flex-wrap gap-4 text-sm">
                    <div class="flex items-center text-gray-600">
                        <i class="fas fa-calendar-alt mr-2"></i>
                        Created <%= moment(vault.createdAt).fromNow() %>
                    </div>
                    <% if (vault.expiresAt) { %>
                        <div class="flex items-center text-orange-600">
                            <i class="fas fa-clock mr-2"></i>
                            Expires <%= moment(vault.expiresAt).fromNow() %>
                        </div>
                    <% } %>
                    <% if (vault.maxDownloads) { %>
                        <div class="flex items-center text-purple-600">
                            <i class="fas fa-download mr-2"></i>
                            <%= vault.totalDownloads %>/<%= vault.maxDownloads %> downloads
                        </div>
                    <% } %>
                </div>
            </div>
            
            <div class="mt-4 md:mt-0 md:ml-6">
                <div class="bg-gray-100 p-4 rounded-lg">
                    <p class="text-xs text-gray-600 mb-1">Vault ID</p>
                    <div class="flex items-center space-x-2">
                        <code class="bg-white px-3 py-1 rounded border text-sm font-mono">
                            <%= vault.vaultId %>
                        </code>
                        <button 
                            onclick="copyToClipboard('<%= vault.vaultId %>')"
                            class="text-blue-600 hover:text-blue-700 transition duration-200"
                            title="Copy Vault ID"
                        >
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- File Upload Section -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-xl font-bold text-gray-900 mb-4">
            <i class="fas fa-cloud-upload-alt text-green-500 mr-2"></i>
            Upload Files
        </h2>
        
        <div id="upload-section">
            <div 
                id="drop-zone" 
                class="file-drop-zone border-2 border-dashed border-gray-300 rounded-lg p-8 text-center cursor-pointer hover:border-blue-400 transition duration-200"
            >
                <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-4"></i>
                <p class="text-gray-600 mb-2">Drag and drop files here, or click to select</p>
                <p class="text-sm text-gray-500">Maximum 10 files, 50MB each</p>
                <input 
                    type="file" 
                    id="file-input" 
                    name="files" 
                    multiple 
                    class="hidden"
                    accept="*/*"
                >
            </div>
            
            <div id="file-list" class="mt-4 space-y-2 hidden"></div>
            
            <button 
                id="upload-button" 
                class="mt-4 bg-green-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-green-700 transition duration-200 hidden"
            >
                <i class="fas fa-upload mr-2"></i>
                Upload Files
            </button>
        </div>
    </div>

    <!-- Files List -->
    <div class="bg-white rounded-lg shadow-lg p-6">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-900">
                <i class="fas fa-files text-blue-500 mr-2"></i>
                Files (<%= files.length %>)
            </h2>
            <% if (files.length > 0) { %>
                <div class="text-sm text-gray-600">
                    Total Size: <%= files.reduce((total, file) => total + file.size, 0) / 1024 / 1024 %> MB
                </div>
            <% } %>
        </div>

        <% if (files.length === 0) { %>
            <div class="text-center py-12">
                <i class="fas fa-folder-open text-gray-300 text-6xl mb-4"></i>
                <p class="text-gray-500 text-lg">No files uploaded yet</p>
                <p class="text-gray-400">Upload some files to get started</p>
            </div>
        <% } else { %>
            <div class="grid grid-cols-1 gap-4">
                <% files.forEach(file => { %>
                    <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition duration-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4 flex-1">
                                <div class="text-2xl">
                                    <% if (file.mimeType.startsWith('image/')) { %>
                                        <i class="fas fa-image text-green-500"></i>
                                    <% } else if (file.mimeType.includes('pdf')) { %>
                                        <i class="fas fa-file-pdf text-red-500"></i>
                                    <% } else if (file.mimeType.includes('zip') || file.mimeType.includes('rar')) { %>
                                        <i class="fas fa-file-archive text-yellow-500"></i>
                                    <% } else if (file.mimeType.includes('video')) { %>
                                        <i class="fas fa-file-video text-purple-500"></i>
                                    <% } else if (file.mimeType.includes('audio')) { %>
                                        <i class="fas fa-file-audio text-blue-500"></i>
                                    <% } else { %>
                                        <i class="fas fa-file text-gray-500"></i>
                                    <% } %>
                                </div>
                                
                                <div class="flex-1 min-w-0">
                                    <h3 class="font-medium text-gray-900 truncate">
                                        <%= file.originalName %>
                                    </h3>
                                    <div class="flex items-center space-x-4 text-sm text-gray-500">
                                        <span><%= (file.size / 1024 / 1024).toFixed(2) %> MB</span>
                                        <span>Downloaded <%= file.downloadCount %> times</span>
                                        <span>Uploaded <%= moment(file.uploadedAt).fromNow() %></span>
                                        <% if (file.isCompressed) { %>
                                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded text-xs">
                                                <i class="fas fa-compress-alt mr-1"></i>
                                                Compressed
                                            </span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="flex items-center space-x-2">
                                <% if (file.maxDownloads && file.downloadCount >= file.maxDownloads) { %>
                                    <span class="text-red-600 text-sm font-medium">
                                        <i class="fas fa-ban mr-1"></i>
                                        Limit Reached
                                    </span>
                                <% } else if (file.expiresAt && new Date() > file.expiresAt) { %>
                                    <span class="text-orange-600 text-sm font-medium">
                                        <i class="fas fa-clock mr-1"></i>
                                        Expired
                                    </span>
                                <% } else { %>
                                    <a 
                                        href="/vault/file/<%= file._id %>/download"
                                        class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition duration-200 text-sm font-medium"
                                    >
                                        <i class="fas fa-download mr-1"></i>
                                        Download
                                    </a>
                                <% } %>
                                
                                <button 
                                    onclick="deleteFile('<%= file._id %>')"
                                    class="text-red-600 hover:text-red-700 transition duration-200 p-2"
                                    title="Delete File"
                                >
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } %>
    </div>
</div>

<script>
const dropZone = document.getElementById('drop-zone');
const fileInput = document.getElementById('file-input');
const fileList = document.getElementById('file-list');
const uploadButton = document.getElementById('upload-button');
let selectedFiles = [];

// File upload functionality
dropZone.addEventListener('click', () => fileInput.click());

dropZone.addEventListener('dragover', (e) => {
    e.preventDefault();
    dropZone.classList.add('drag-over');
});

dropZone.addEventListener('dragleave', () => {
    dropZone.classList.remove('drag-over');
});

dropZone.addEventListener('drop', (e) => {
    e.preventDefault();
    dropZone.classList.remove('drag-over');
    handleFiles(e.dataTransfer.files);
});

fileInput.addEventListener('change', (e) => {
    handleFiles(e.target.files);
});

function handleFiles(files) {
    selectedFiles = Array.from(files);
    displayFileList();
}

function displayFileList() {
    if (selectedFiles.length === 0) {
        fileList.classList.add('hidden');
        uploadButton.classList.add('hidden');
        return;
    }

    fileList.classList.remove('hidden');
    uploadButton.classList.remove('hidden');

    fileList.innerHTML = selectedFiles.map((file, index) => `
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded border">
            <div class="flex items-center space-x-3">
                <i class="fas fa-file text-gray-500"></i>
                <div>
                    <p class="font-medium text-gray-900">${file.name}</p>
                    <p class="text-sm text-gray-500">${(file.size / 1024 / 1024).toFixed(2)} MB</p>
                </div>
            </div>
            <button 
                onclick="removeFile(${index})"
                class="text-red-600 hover:text-red-700 transition duration-200"
            >
                <i class="fas fa-times"></i>
            </button>
        </div>
    `).join('');
}

function removeFile(index) {
    selectedFiles.splice(index, 1);
    displayFileList();
}

uploadButton.addEventListener('click', async () => {
    if (selectedFiles.length === 0) return;

    const formData = new FormData();
    selectedFiles.forEach(file => {
        formData.append('files', file);
    });

    uploadButton.disabled = true;
    uploadButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Uploading...';

    try {
        const response = await fetch(`/vault/<%= vault.vaultId %>/upload`, {
            method: 'POST',
            body: formData
        });

        const result = await response.json();

        if (result.success) {
            showNotification(result.message, 'success');
            setTimeout(() => location.reload(), 1500);
        } else {
            showNotification(result.message, 'error');
        }
    } catch (error) {
        showNotification('Upload failed. Please try again.', 'error');
    } finally {
        uploadButton.disabled = false;
        uploadButton.innerHTML = '<i class="fas fa-upload mr-2"></i>Upload Files';
    }
});

async function deleteFile(fileId) {
    if (!confirm('Are you sure you want to delete this file?')) return;

    try {
        const response = await fetch(`/vault/file/${fileId}`, {
            method: 'DELETE'
        });

        const result = await response.json();

        if (result.success) {
            showNotification(result.message, 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification(result.message, 'error');
        }
    } catch (error) {
        showNotification('Failed to delete file. Please try again.', 'error');
    }
}
</script>